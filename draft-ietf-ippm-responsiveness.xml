<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-03" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2024" month="January" day="23"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our network connections continue to suffer from an unacceptable amount
of latency, not for a lack of technical solutions, but rather a lack of awareness
of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with goodput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/>, Cake <xref target="Cake"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., goodput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

<t>This document imports terminology and concepts from <xref target="RFC9110"/>, such as request
and response header fields and content.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
The traditional delay measurement tools use ICMP, which may experience even
more drastically different behavior than TCP or UDP.
Thus, a good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved by increasing its capacity, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (it is left to the implementation to chose a suitable time-limit and we recommend for
any implementation to allow the user to configure the duration of the test).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that goodput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, goodput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase goodput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the goodput the same,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will gradually decrease from now on, until the buffers
are entirely full and reach stability of the responsiveness as well.</t>

</section>
<section anchor="avoiding-test-hardware-bottlenecks"><name>Avoiding Test Hardware Bottlenecks</name>

<t>The Responsiveness Test could be run from various devices which are either consumer devices
or internet infrastructure such as routers. Many routers are cost-sensitive embedded devices
optimised for switching packets rather than terminating TLS connections at line rate. As a
result, they may not have sufficient processing power or memory bandwidth to saturate a
bottleneck link in order to be a useful test client for the responsiveness test.</t>

<t>In order to measure responsiveness from these devices, the test can be conducted without TLS
over plain HTTP. Whenever possible, it is preferred to test using TLS to resemble typical
internet traffic to the maximum extent.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. In the case that TLS is not being used, it is undefined.
And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>). For cases where multiplexing GET requests into
the load generation connections is not possible (e.g. due to only HTTP/1.1 being available), the TCP
stack estimated round-trip-time can be used as a proxy or substitute value.</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The probes should be spread out equally over the duration of the interval. The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<section anchor="for-the-tls-enabled-case"><name>For the TLS-Enabled Case</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a single-sided trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) + 1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
<section anchor="for-the-tcp-only-case"><name>For the TCP-Only Case</name>

<t>If there are no TLS connections being used, then the notion of a normalised round-trip time for the TLS handshake does not apply.
Zeroes cannot be substituted for <spanx style="verb">tls_f</spanx>, as that will result in an artificially low responsiveness value.
Instead, the same principle of giving each contribution to the foreign RTT equal weight, and then giving the foreign and self RTTs
equal weights is applied.</t>

<t>The TCP-only responsiveness is therefore calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/4*(TM(tcp_f) + TM(http_f)) + 1/2*TM(http_s))
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of the final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique ensures that we quickly reach full capacity full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes will be transmitted
until responsiveness stability is reached.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the most-recent MAD intervals is within SDT
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval <spanx style="verb">p</spanx>: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that implementations may chose to implement a time-limit
on the duration of the test.
It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute MAD iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least MAD
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate. The confidence score should be reported to the user as part of
the main results.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This is fully intentioinal as the properties of the
client and the server implementations have a direct impact on the perceived responsiveness by the user. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. To gain this insight, implementations of the responsiveness
test are encouraged to have an optional verbose mode that exposes the inner workings
of the algorithm as well as statistics from the lower layers.
The following is a non-exhaustive list of additional information that can be exposed
in the verbose mode: Idle-latency (measured at the beginning from the initial connections),
achieved capacity on load-generating connections, TM(tcp_f), TM(tls_f), TM(http_f) and TM(http_l)
(and even their raw values), HTTP-protocol (HTTP/1.1, HTTP/2, HTTP/3), transport protocol (TCP, QUIC, ...), congestion-control
algorithm (Cubic, BBR, ...) used on the client-side, ECN or L4S statistics, IP version, ... and many more.</t>

<t>The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

<t>Beyond the difference in the latency of the load-generating connections and the
separate connections, another element can provide additional information: Namely
testing against different servers located in different places along the path will
allow, to some extent, the opportunity to separate the network’s path in different segments. For
example, if the cable modem and a more distant ISP server are hosting
responsiveness measurement endpoints, some localization of the issue can be done.
If the RPM to the cable modem is very high, it means that the network segment
from the client endpoint to the cable modem does not have responsiveness issues,
thus allowing the user to conclude that possible responsiveness issues are
beyond the cable modem.
It must be noted, though, that due to the high level approach to the testing
(including HTTP), a low responsiveness to the cable modem does not necessarily
mean that the network between client and cable modem is the problem (as
outlined in the above previous paragraphs).</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and POST in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a request with a GET or POST method.
The client MUST send the GET with the "Accept-Encoding" header set to "identity" to ensure the
server will not compress the data.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to respond to a GET request with content.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 (OK) and 1 byte of content.
The actual message content is irrelevant.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 (OK) and content size of at least 8GB.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The content can be larger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary content size.
The server should discard the content.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations that apply to any Active
Measurement of live paths are relevant here. See <xref target="RFC4656"></xref> and <xref target="RFC5357"></xref>.</t>

<t>If server-side resources are a concern, a server can choose to not reply or delay
its response to the initial request for the configuration information through the
.well-known URL.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz and Felix Gaudin for their
enthusiasm around the project and the development
of the Go responsiveness measurement tool and the librespeed implementation.
We also thank Lucas Pardue, Sebastian Moeller, Rich Brown, Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
  <front>
    <title>HTTP Semantics</title>
    <author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'/>
    <author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'/>
    <author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'/>
    <date month='June' year='2022'/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='97'/>
  <seriesInfo name='RFC' value='9110'/>
  <seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="Cake" >
  <front>
    <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
    <author initials="T." surname="Høiland-Jørgensen">
      <organization></organization>
    </author>
    <author initials="D." surname="Taht">
      <organization></organization>
    </author>
    <author initials="J." surname="Morton">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="2018 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)" value=""/>
</reference>


<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
  <front>
    <title>Transmission Control Protocol</title>
    <author fullname='J. Postel' initials='J.' surname='Postel'/>
    <date month='September' year='1981'/>
  </front>
  <seriesInfo name='RFC' value='793'/>
  <seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC4656' target='https://www.rfc-editor.org/info/rfc4656'>
  <front>
    <title>A One-way Active Measurement Protocol (OWAMP)</title>
    <author fullname='S. Shalunov' initials='S.' surname='Shalunov'/>
    <author fullname='B. Teitelbaum' initials='B.' surname='Teitelbaum'/>
    <author fullname='A. Karp' initials='A.' surname='Karp'/>
    <author fullname='J. Boote' initials='J.' surname='Boote'/>
    <author fullname='M. Zekauskas' initials='M.' surname='Zekauskas'/>
    <date month='September' year='2006'/>
    <abstract>
      <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss. High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA). OWAMP enables the interoperability of these measurements. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4656'/>
  <seriesInfo name='DOI' value='10.17487/RFC4656'/>
</reference>

<reference anchor='RFC5357' target='https://www.rfc-editor.org/info/rfc5357'>
  <front>
    <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
    <author fullname='K. Hedayat' initials='K.' surname='Hedayat'/>
    <author fullname='R. Krzanowski' initials='R.' surname='Krzanowski'/>
    <author fullname='A. Morton' initials='A.' surname='Morton'/>
    <author fullname='K. Yum' initials='K.' surname='Yum'/>
    <author fullname='J. Babiarz' initials='J.' surname='Babiarz'/>
    <date month='October' year='2008'/>
    <abstract>
      <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices. OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements. However, it does not accommodate round-trip or two-way measurements. This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities. The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5357'/>
  <seriesInfo name='DOI' value='10.17487/RFC5357'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAEhEsGUAA9V96XIjR5Lm/3yKWPSOiewFUGRdUnFNNkNVlSS26qCK1Mh2
Z9pUCWQQyC4gE8rIJAqtVtu8xr7J/J832SdZ/9w9jkyAVLXN2Nhsz9EsABkZ
4eHh/vkZk8kka8t2Zc/MO+s2deXKW1tZ50xXFbYxP9bNh7JamOd1VZRtSd9n
+WzW2NtP/31Rz6t8TS8omvymnZS2vZmUm8160vQGmJw8yoq8tWfZnP7/om52
Z8a1RZa5brYunaOxrncbGubi5fXX2bwu6DVnpqPBvsjKTXNm2qZz7cOTk2cn
D7O8sfmZuW7yil7RtNmWprVo6m5Dj1+aS9vc1M06r+bWvLa56xq7tlWbfbA7
+mFBv6la21S2nbzAlGkKbV4VP+WruqL376zLNuWZ+ae2no+No+Ebe+Por90a
f/wxy/KuXdbNWWbMhP7PmLJyZ+b51FzmuZsv+SOhyPNlU7q23izTr+qG1nW+
2awszWM+5c8cvcO2Z+ZtZfWry7z5YH7Md/z1vGyJWs+7jW3asqrH5nm+KmmJ
VZmbZ09OTh/Lr+quakHWH6qytYW5aonQztQ35nxtm3Ke86/sOi9XZ2a+4Rn9
Q463Tef1Ousv592USLezTbKad0SkfLVKPv+vsZSmWd+5jKspbYJ1y7KxyUqu
2i5v2v43/zXWMtcp3bmgH6fm23xLZ9Al6/mxpG1JP+bF0PtubeNoknjZ87Ka
l1WVt2X6viU/tF3+QzfHB9NuPrVFl2UVzk9Lz4PL3339/Nnp6clZlpXVTfrF
V93NjW1mqzpvz3jUeDLoPxOZ8R+m5hvbtjvX+/S7qXlTzpf1Sj5WGTVKRzQv
QGz5xNFTpl3acHRHskFEQOswK9qHer3uKqIniyUsGb8/f/56bP6xXnVra548
GZs33XpGcuzUHD08OX14TKM8zz/Yu2d/TfT+t38tV8T7kz/82782C1s5W/V+
8mJqrvNlO1z0a5IcddVb3WVpSSRhM86/e0nchjlvGru0LCXN953tSGLlVb5g
gWWuaN5YjSGqm29rWsI3xDvbfOf2l0/L+YJk58uXSiImQ74yV7v1pnZltzY0
zqt6Th/RWugQt029qVcliT5zTuLUvLEtxKgzR6/O37w+f3MsO3/y+bNHygSn
J48e65+Pnz55qn8+efTkc//n51880T+fPnoU/vz86cP4px/si6en/gdffP7U
D/bFw2cn/s+TR+G3D58884z4MEzn2aNH4MnJZGLyGR3VfE6i/GuiFEn+HYnx
vCGpnZtVPv8AmvfV0djc5k1Zd261M0STlS2yVb4Y069bW813YzpCZhaZcUwn
xZmZtRWNM68XVflneoI+Iup1OBRtRxS3Y3qmpRO/XtcVa4xNW6+Zdesi333m
TKVEnmYvaR6GtA8xY24KO88L5gx8i51ilZQ3RflnqNvWzpdg7RXpI2EJN87K
luZCp5aYPdd3mk1Tz1Z2zQwD9re01R2xCb0Qb2x2pOLM6ENVb92IfpC3hkYp
nRnxgV+N+MHc3JaFrWnMitZvoUbbOlvmxKI6vjNbYlqazNrO6mJn7MpZQ4Mt
waOly7Z5O19i4rl5/J1Z17elBUG7DdESit1slnVbO3PTEHlonmWDTyo7zb6t
t5bmOcanDcYyVZ0snxjV6Xlol/RlW9Om8ErnuaPHL+g74oOwu+ZnPlPreKYC
AWVB9M9bEsoYQddGlHrbNX6nQITKzkWm0N8k6DuQwzhmDlkBM0E+n9tNm9MQ
Jl9D5me0nYGdqrpV2np+PLSnzD5NjrUnv8y3hHfAtJkKNb/LOMiFJaLueGn0
bdm6ONw0+9ESeVYlUVQ2e070a2Vf2rpeyYdrgUhub+g1dpE+39ialNFnLsPO
7IiRjf24gegBZ2yhe3hc2QciFs00b3Zx2uMMo9EbulWLwwB+X+MjECSZbXaN
LSU82clObey8vCl1YqMBHr22rhV2lfljVf0jTtzQgvldcjgI05HKkdUR/fOq
dGvmIiUCH5YsWZ5OAiJiJ0wvixTmKD0u3ioungdcPKXVWD8sr4d+TAPTHB0x
HImO0TvikmLSNuXGAbOa18RbrR2Zo3eXr4+ZZm5Zd6sCLE7ae9UV9OC2bJdm
UdfFhljlqNsIE9Tb6hh/ZWVB/Kdch5fMG5oOmKykiZFurBtWjX4BP3cEWdrd
VMTouizo8Sz7HXRIUxcd8/3/N0LV/PJLgh9+/XWaeQXqzKr8YM3Nzz+RYWFX
9EPVNb/+OjaXFy/1A9I4+ACIgD7Bf/36K+b86vGV/AIqhz5iycHzjmIaM6ed
IJZn6QBBaD+22PctCVMiSLmmQwRGsMU0e4OjRJy0YqrJAaPBcJZSwZIQi7bo
fEX4pFssjSuJVmDKqmVBibFJ6kFvgH/T40m/YQkJU6mk3d8ZWIQs+OnFEBeW
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

-->

</rfc>

