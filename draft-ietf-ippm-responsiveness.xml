<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-03" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2024" month="February" day="16"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our network connections continue to suffer from an unacceptable amount
of latency, not for a lack of technical solutions, but rather a lack of awareness
of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with goodput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/>, Cake <xref target="Cake"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., goodput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

<t>This document imports terminology and concepts from <xref target="RFC9110"/>, such as request
and response header fields and content.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
The traditional delay measurement tools use ICMP, which may experience even
more drastically different behavior than TCP or UDP.
Thus, a good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there is some hop
along the path with the lowest capacity for that path.
If that hop were to be improved by increasing its capacity, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing in the network only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (it is left to the implementation to chose a suitable time-limit and we recommend for
any implementation to allow the user to configure the duration of the test).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server is fully utilized at its capacity
and the buffer or the AQM are also used at their maximum, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>For all these reasons, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debugging the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition - once goodput is maximized - if the transport protocol emits more
traffic into the network than is needed, the additional traffic will either
get dropped or be buffered and thus create a "standing queue" that is characteristic
of bufferbloat.
At this moment the test starts
measuring the responsiveness until that metric reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm presumes that goodput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, goodput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase goodput is by
adding more TCP connections to the pool of load-generating connections.
If new connections don't result in an increase in goodput,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will decrease from now on, until the buffers
are entirely full and stability is reached.</t>

</section>
<section anchor="avoiding-test-hardware-bottlenecks"><name>Avoiding Test Hardware Bottlenecks</name>

<t>The Responsiveness Test could be run from various devices which are either consumer devices
or internet infrastructure such as routers. Many routers are cost-sensitive embedded devices
optimised for switching packets rather than terminating TLS connections at line rate. As a
result, they may not have sufficient processing power or memory bandwidth to saturate a
bottleneck link in order to be a useful test client for the responsiveness test.</t>

<t>In order to measure responsiveness from these devices, the test can be conducted without TLS
over plain HTTP. Whenever possible, it is preferred to test using TLS to resemble typical
internet traffic to the maximum extent.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>INP</c>
      <c>Initial number of concurrent transport connections at the start of the test</c>
      <c>1</c>
      <c>INC</c>
      <c>Number of transport connections to add to the pool of load-generating connections at each interval</c>
      <c>1</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. In the case that TLS is not being used, it is undefined.
And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_l</spanx>). For cases where multiplexing GET requests into
the load generation connections is not possible (e.g. due to only HTTP/1.1 being available), the TCP
stack estimated round-trip-time can be used as a proxy or substitute value.</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_l</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The same amount of probes should be sent on load-generating as well as on separate connections.
The probes should be spread out equally over the duration of the interval, with the two types
of probes interleaving with each other.
The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<section anchor="for-the-tls-enabled-case"><name>For the TLS-Enabled Case</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a single-sided trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the average of the "foreign responsiveness"
on separate connections and the responsiveness on load-generating connections.</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(tls_f) + TM(http_f)) / 3)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
<section anchor="for-the-tcp-only-case"><name>For the TCP-Only Case</name>

<t>If there are no TLS connections being used, then the notion of a normalised round-trip time for the TLS handshake does not apply.
Zeroes cannot be substituted for <spanx style="verb">tls_f</spanx>, as that will result in an artificially low responsiveness value.
Instead, the same principle of giving each contribution to the foreign RTT equal weight, and then giving the foreign and self RTTs
equal weights is applied.</t>

<t>The TCP-only responsiveness is therefore calculated in the folowing way:</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(http_f)) / 2)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of the final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique
ensures that we quickly reach full capacity.
In parallel of this process we send responsiveness probes.
First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, the responsiveness stability is being tracked
until it is shown to be stable at which point the final measurement can be computed.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the immediately preceding MAD intervals is within SDT
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval <spanx style="verb">p</spanx>: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create INP load-generating connections (INP defaults to 1, but can be increased if one has prior knowledge on the capacity of the link).</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create INC additional load-generating connections (INC defaults to 1, but can be increased for a more aggressive ramp-up phase).</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that implementations may chose to implement a time-limit
on the duration of the test.
If stability is not reached within the time-frame, the implementation can report
the current results with a indication of confidence in the result as described in
the following section.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute MAD iterations of the specific stage. Meaning, the moving average is
not taking the full window into account. This can happen if the time-limit of the
test has been reached before MAD intervals could execute.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least MAD
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate. The confidence score should be reported to the user as part of
the main results.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This is fully intentioinal as the properties of the
client and the server implementations have a direct impact on the perceived responsiveness by the user. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators" and similar
middleboxes.
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Active Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

<t>Beyond the server's networking stack influence, the server selection impacts the
result as well. First, the network-path chosen between client and server is influenced
by the server-selection. Second, the network-stack deployed on the selected server
may not be representative for workloads that are relevant to the user running the test.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. To gain this insight, implementations of the responsiveness
test are encouraged to have an optional verbose mode that exposes the inner workings
of the algorithm as well as statistics from the lower layers.
The following is a non-exhaustive list of additional information that can be exposed
in the verbose mode: Idle-latency (measured at the beginning from the initial connections),
achieved capacity on load-generating connections, TM(tcp_f), TM(tls_f), TM(http_f) and TM(http_l)
(and even their raw values), HTTP-protocol (HTTP/1.1, HTTP/2, HTTP/3), transport protocol (TCP, QUIC, ...), congestion-control
algorithm (Cubic, BBR, ...) used on the client-side, ECN or L4S statistics, IP version, ... and many more.</t>

<t>The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

<t>Beyond the difference in the latency of the load-generating connections and the
separate connections, another element can provide additional information: Namely
testing against different servers located in different places along the path will
allow, to some extent, the opportunity to separate the network’s path in different segments. For
example, if the cable modem and a more distant ISP server are hosting
responsiveness measurement endpoints, some localization of the issue can be done.
If the RPM to the cable modem is very high, it means that the network segment
from the client endpoint to the cable modem does not have responsiveness issues,
thus allowing the user to conclude that possible responsiveness issues are
beyond the cable modem.
It must be noted, though, that due to the high level approach to the testing
(including HTTP), a low responsiveness to the cable modem does not necessarily
mean that the network between client and cable modem is the problem (as
outlined in the above previous paragraphs).</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and POST in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a request with a GET or POST method.
The client MUST send the GET with the "Accept-Encoding" header set to "identity" to ensure the
server will not compress the data.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to respond to a GET request with content.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 (OK) and 1 byte of content.
The actual message content is irrelevant.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 (OK) and content size of at least 8GB.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The content can be larger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary content size.
The server should discard the content.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains JSON configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URIthat contains a valid JSON object
meeting the following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider requires to pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field. The client is then expected to use "test_endpoint" when
resolving the hostname for the URLs</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application
name is "nq" (e.g., https://nq.example.com/.well-known/nq).
The media type of the resource at the well-known URI is "application/json" and
the format of the resource is as specified above. The URI scheme is "https".
No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations that apply to any Active
Measurement of live paths are relevant here. See <xref target="RFC4656"></xref> and <xref target="RFC5357"></xref>.</t>

<t>If server-side resources are a concern, a server can choose to not reply or delay
its response to the initial request for the configuration information through the
.well-known URL.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz and Felix Gaudin for their
enthusiasm around the project and the development
of the Go responsiveness measurement tool and the librespeed implementation.
We also thank Lucas Pardue, Sebastian Moeller, Rich Brown, Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
  <front>
    <title>HTTP Semantics</title>
    <author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'/>
    <author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'/>
    <author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'/>
    <date month='June' year='2022'/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='97'/>
  <seriesInfo name='RFC' value='9110'/>
  <seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="Cake" >
  <front>
    <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
    <author initials="T." surname="Høiland-Jørgensen">
      <organization></organization>
    </author>
    <author initials="D." surname="Taht">
      <organization></organization>
    </author>
    <author initials="J." surname="Morton">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="2018 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)" value=""/>
</reference>


<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
  <front>
    <title>Transmission Control Protocol</title>
    <author fullname='J. Postel' initials='J.' surname='Postel'/>
    <date month='September' year='1981'/>
  </front>
  <seriesInfo name='RFC' value='793'/>
  <seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC4656' target='https://www.rfc-editor.org/info/rfc4656'>
  <front>
    <title>A One-way Active Measurement Protocol (OWAMP)</title>
    <author fullname='S. Shalunov' initials='S.' surname='Shalunov'/>
    <author fullname='B. Teitelbaum' initials='B.' surname='Teitelbaum'/>
    <author fullname='A. Karp' initials='A.' surname='Karp'/>
    <author fullname='J. Boote' initials='J.' surname='Boote'/>
    <author fullname='M. Zekauskas' initials='M.' surname='Zekauskas'/>
    <date month='September' year='2006'/>
    <abstract>
      <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss. High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA). OWAMP enables the interoperability of these measurements. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4656'/>
  <seriesInfo name='DOI' value='10.17487/RFC4656'/>
</reference>

<reference anchor='RFC5357' target='https://www.rfc-editor.org/info/rfc5357'>
  <front>
    <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
    <author fullname='K. Hedayat' initials='K.' surname='Hedayat'/>
    <author fullname='R. Krzanowski' initials='R.' surname='Krzanowski'/>
    <author fullname='A. Morton' initials='A.' surname='Morton'/>
    <author fullname='K. Yum' initials='K.' surname='Yum'/>
    <author fullname='J. Babiarz' initials='J.' surname='Babiarz'/>
    <date month='October' year='2008'/>
    <abstract>
      <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices. OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements. However, it does not accommodate round-trip or two-way measurements. This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities. The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5357'/>
  <seriesInfo name='DOI' value='10.17487/RFC5357'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIABnNz2UAA9V963IjR3bm/3qKXMw6RNoA1OybJG4obKq7JXHUF6pJWbFr
T6gLQBKo6UJVqbKKbI5GE/sa+yb+7zfZJ9nznXPyUgWA6lk7vF7NRSBQlZeT
537L2WyWdUVX2lPz1rqmrlxxYyvrnOmrlW3Nj3X7vqjW5lldrYquoN+zfLFo
7c3HP7+ql1W+pQlWbX7dzQrbXc+KptnO2sEAswePslXe2dNsSf+/rtu7U+O6
VZa5frEtnKOxru4aGub8xdXX2bJe0TSnpqfBPs+Kpj01Xdu77uGDB188eJjl
rc1PzVWbVzRF22W3tKx1W/cNvX5hLmx7XbfbvFpa88rmrm/t1lZd9t7e0YMr
eqbqbFvZbvYcS6YldHm1+ikv64rmv7Mua4pT809dvZwaR8O39trRp7stPvwh
y/K+29TtaWbMjP5nTFG5U/Nsbi7y3C03/JVA5NmmLVxXN5v0p7qlfZ01TWlp
Hcs5f+doDtudmjeV1Z8u8va9+TG/45+XRUfQetY3tu2Kqp6aZ3lZ0BarIjdf
PHlw8lieqvuqA1h/qIrOrsxlR4B2pr42Z1vbFsucn7LbvChPzbLhFf1Djtnm
y3qbDbfzdk6gu7Ntspu3BKS8LJPv/3NspW23B7dxOadDsG5TtDbZyWXX5203
/OU/x16WuqSDG/pxbr7Nb4kGXbKfHws6lvRr3gzNd2NbR4vEZM+KallUVd4V
6Xwbful28w/9El/M++Xcrvosq0A/Hb0PLH/79bMvTk4enGZZUV2nP3zVX1/b
dlHWeXfKo0bKoH9msuLfz803tuvu3ODb7+bmdbHc1KV8rTxqko5ongPY8o2j
t0y3sYF0J3JABEDrsCo6h3q77SuCJ7MlbBnPnz17NTX/WJf91ponT6bmdb9d
EB87MUcPH5w8PKZRnuXv7eHVXxG8//VfipJwf/b7f/2Xdm0rZ6vBI8/n5irf
dONNvyLOUVeD3V0UllgSDuPsuxeEbVhz09qNZS5pvu9tTxwrr/I1MyxzSevG
bgxB3Xxb0xa+Idy5ze/c7vZpO58T73zxQkHEYMhLc3m3bWpX9FtD47ysl/QV
7YWIuGvrpi4LYn3mjNipeW07sFFnjl6evX519vpYTv7BZ188UiQ4efDosX58
/PTJU/345NGTz/zHzz5/oh+fPnoUPn729GH86Af7/OmJf+Dzz576wT5/+MUD
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
AA==

-->

</rfc>

