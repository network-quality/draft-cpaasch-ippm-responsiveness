<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-03" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2024" month="January" day="17"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our network connections continue to suffer from an unacceptable amount
of latency, not for a lack of technical solutions, but rather a lack of awareness
of the problem and deployment of its solutions. 
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with goodput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/>, Cake <xref target="Cake"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., goodput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

<t>This document imports terminology and concepts from <xref target="RFC9110"/>, such as requests
and response header fields and content.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
The traditional delay measurement tools use ICMP, which may experience even
more drastically different behavior than TCP or UDP.
Thus, a good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved by increasing its capacity, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (we target 20 seconds,
but it is left to the implementation to chose a suitable time-limit and we recommend for
any implementation to allow the user to configure the duration of the test).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that goodput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, goodput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase goodput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the goodput the same,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will gradually decrease from now on, until the buffers
are entirely full and reach stability of the responsiveness as well.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>).</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The probes should be spread out equally over the duration of the interval. The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a single sided trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) + 1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of the final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique ensures that we quickly reach full capacity full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes will be transmitted
until responsiveness stability is reached.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the most-recent MAD intervals is within SDT
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute MAD iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least MAD
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This is fully intentioinal as the properties of the
client and the server implementations have a direct impact on the perceived responsiveness by the user. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. To gain this insight, implementations of the responsiveness
test are encouraged to have an optional verbose mode that exposes the inner workings
of the algorithm. Specifically it is useful to expose TM(tcp_f), TM(tls_f), TM(http_f) and TM(http_l)
to enable the root-causing analysis detailed hereafter.</t>

<t>The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

<t>Beyond the difference in the latency of the load-generating connections and the
separate connections another element can provide additional information. Namely
testing against different servers located in different places along the path will
allow to some extent to separate the network’s path in different segments. For
example, if the cable modem and a further away ISP server are hosting
responsiveness measurement endpoints, some localization of the issue can be done.
If the RPM to the cable modem is very high, it means that the network segment
from the client endpoint to the cable modem does not have responsiveness issues,
thus allowing the user to conclude that possible responsiveness issues are
beyond the cable modem.
It must be noted though that due to the high level approach to the testing
(including HTTP), a low responsiveness to the cable modem does not necessarily
mean that the network between client and cable modem is the problem (as
outlined in the above previous paragraphs).</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and POST in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a request with a GET or POST method.
The client MUST send the GET without the "Accept-Encoding" header to ensure the
server will not compress the data.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to respond to a GET request with content.
The server SHOULD use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for Responsiveness Test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 (OK) and 1 byte of content.
The actual message content is irrelevant.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 (OK) and content size of at least 8GB.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The content can be larger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary content size.
The server should discard the content.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations that apply to any Active
Measurement of live paths are relevant here. See <xref target="RFC4656"></xref> and <xref target="RFC5357"></xref>.</t>

<t>If server-side resources are a concern, a server can choose to not reply or delay
its response to the initial request for the configuration information through the
.well-known URL.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz and Felix Gaudin for their
enthusiasm around the project and the development
of the Go responsiveness measurement tool and the librespeed implementation.
We also thank Lucas Pardue, Sebastian Moeller, Rich Brown, Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
  <front>
    <title>HTTP Semantics</title>
    <author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'/>
    <author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'/>
    <author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'/>
    <date month='June' year='2022'/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='97'/>
  <seriesInfo name='RFC' value='9110'/>
  <seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="Cake" >
  <front>
    <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
    <author initials="T." surname="Høiland-Jørgensen">
      <organization></organization>
    </author>
    <author initials="D." surname="Taht">
      <organization></organization>
    </author>
    <author initials="J." surname="Morton">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="2018 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)" value=""/>
</reference>


<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
  <front>
    <title>Transmission Control Protocol</title>
    <author fullname='J. Postel' initials='J.' surname='Postel'/>
    <date month='September' year='1981'/>
  </front>
  <seriesInfo name='RFC' value='793'/>
  <seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC4656' target='https://www.rfc-editor.org/info/rfc4656'>
  <front>
    <title>A One-way Active Measurement Protocol (OWAMP)</title>
    <author fullname='S. Shalunov' initials='S.' surname='Shalunov'/>
    <author fullname='B. Teitelbaum' initials='B.' surname='Teitelbaum'/>
    <author fullname='A. Karp' initials='A.' surname='Karp'/>
    <author fullname='J. Boote' initials='J.' surname='Boote'/>
    <author fullname='M. Zekauskas' initials='M.' surname='Zekauskas'/>
    <date month='September' year='2006'/>
    <abstract>
      <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss. High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA). OWAMP enables the interoperability of these measurements. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4656'/>
  <seriesInfo name='DOI' value='10.17487/RFC4656'/>
</reference>

<reference anchor='RFC5357' target='https://www.rfc-editor.org/info/rfc5357'>
  <front>
    <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
    <author fullname='K. Hedayat' initials='K.' surname='Hedayat'/>
    <author fullname='R. Krzanowski' initials='R.' surname='Krzanowski'/>
    <author fullname='A. Morton' initials='A.' surname='Morton'/>
    <author fullname='K. Yum' initials='K.' surname='Yum'/>
    <author fullname='J. Babiarz' initials='J.' surname='Babiarz'/>
    <date month='October' year='2008'/>
    <abstract>
      <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices. OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements. However, it does not accommodate round-trip or two-way measurements. This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities. The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5357'/>
  <seriesInfo name='DOI' value='10.17487/RFC5357'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIACNoqGUAA9V963Ijx5Hu/36KOvDZEOkDYMi5ScMNhU3NjKSx5kIPKStO
7Do0DXQBaBPohrq6yYFlbexrnDfZ//sm50lOfplZl26A1Dh2Y2OP9+IhgK6u
ysrK/PJak8kka8t2bc/Me+u2deXKG1tZ50xXFbYxP9TNdVktzfO6Ksq2pO+z
fDZr7M2n/76o51W+oRcUTb5oJ6VtF5Nyu91Mmt4Ak5NHWZG39iyb0/9f1s3u
zLi2yDLXzTalczTW1W5Lw7x6efV1Nq8Les2Z6WiwL7Jy25yZtulc+/Dk5NnJ
wyxvbH5mrpq8olc0bXZL01o2dbelxy/MhW0WdbPJq7k1b2zuusZubNVm13ZH
PyzoN1Vrm8q2kxeYMk2hzavix3xdV/T+nXXZtjwz/9TW87FxNHxjF47+tdvg
H3/OsrxrV3Vzlhkzof8zpqzcmXk+NRd57uYr/kgo8nzVlK6tt6v0q7qhdZ1v
t2tL85hP+TNH77DtmXlXWf3qIm+uzQ/5jr+ely1R63m3tU1bVvXYPM/XJS2x
KnPz7MnJ6WP5Vd1VLcj6fVW2tjCXLRHamXphzje2Kec5/8pu8nJ9ZuZbntHv
c7xtOq83WX8576dEup1tktW8JyLl63Xy+X+PpTTN5s5lXE5pE6xblY1NVnLZ
dnnT9r/577GWuU7pzgX9MDXf5rd0Bl2ynh9K2pb0Y14Mve/GNo4miZc9L6t5
WVV5W6bvW/FDt6vfd3N8MO3mU1t0WVbh/LT0PLj8/dfPn52enpxlWVkt0i++
6hYL28zWdd6e8ajxZNB/JjLjP0zNN7Ztd6736XdT87acr+q1fKwyapSOaF6A
2PKJo6dMu7Lh6I5kg4iA1mFWtA/1ZtNVRE8WS1gyfn/+/M3Y/KledxtrnjwZ
m7fdZkZy7NQcPTw5fXhMozzPr+3ds78iev/7v5Vr4v3JH/7935qlrZytej95
MTVX+aodLvoNSY666q3uorQkkrAZ59+9JG7DnLeNXVmWkuaPne1IYuVVvmSB
ZS5p3liNIaqbb2tawjfEO7f5zu0vn5bzBcnOly+VREyGfG0ud5tt7cpuY2ic
1/WcPqK10CFum3pbr0sSfeacxKl5a1uIUWeOXp+/fXP+9lh2/uTzZ4+UCU5P
Hj3Wfz5++uSp/vPJoyef+39+/sUT/efTR4/CPz9/+jD+0w/2xdNT/4MvPn/q
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
AA==

-->

</rfc>

