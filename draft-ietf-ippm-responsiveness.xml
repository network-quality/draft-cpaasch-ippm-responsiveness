<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-03" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2024" month="February" day="26"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our network connections continue to suffer from an unacceptable amount
of latency, not for a lack of technical solutions, but rather a lack of awareness
of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with goodput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/>, Cake <xref target="Cake"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., goodput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

<t>This document imports terminology and concepts from <xref target="RFC9110"/>, such as request
and response header fields and content.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
The traditional delay measurement tools use ICMP, which may experience even
more drastically different behavior than TCP or UDP.
Thus, a good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there is some hop
along the path with the lowest capacity for that path.
If that hop were to be improved by increasing its capacity, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing in the network only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (it is left to the implementation to chose a suitable time-limit and we recommend for
any implementation to allow the user to configure the duration of the test).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server is fully utilized at its capacity
and the buffer or the Active Queue Management (AQM) are also used at their maximum, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>For all these reasons, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debugging the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition - once goodput is maximized - if the transport protocol emits more
traffic into the network than is needed, the additional traffic will either
get dropped or be buffered and thus create a "standing queue" that is characteristic
of bufferbloat.
At this moment the test starts
measuring the responsiveness until that metric reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm presumes that goodput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, goodput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase goodput is by
adding more TCP connections to the pool of load-generating connections.
If new connections don't result in an increase in goodput,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will decrease from now on, until the buffers
are entirely full and stability is reached.</t>

</section>
<section anchor="avoiding-test-hardware-bottlenecks"><name>Avoiding Test Hardware Bottlenecks</name>

<t>The Responsiveness Test could be run from various devices which are either consumer devices
or internet infrastructure such as routers. Many routers are cost-sensitive embedded devices
optimised for switching packets rather than terminating TLS connections at line rate. As a
result, they may not have sufficient processing power or memory bandwidth to saturate a
bottleneck link in order to be a useful test client for the responsiveness test.</t>

<t>In order to measure responsiveness from these devices, the test can be conducted without TLS
over plain HTTP. Whenever possible, it is preferred to test using TLS to resemble typical
internet traffic to the maximum extent.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>INP</c>
      <c>Initial number of concurrent transport connections at the start of the test</c>
      <c>1</c>
      <c>INC</c>
      <c>Number of transport connections to add to the pool of load-generating connections at each interval</c>
      <c>1</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. In the case that TLS is not being used, it is undefined.
And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_l</spanx>). For cases where multiplexing GET requests into
the load generation connections is not possible (e.g. due to only HTTP/1.1 being available), the TCP
stack estimated round-trip-time can be used as a proxy or substitute value.</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_l</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The same amount of probes should be sent on load-generating as well as on separate connections.
The probes should be spread out equally over the duration of the interval, with the two types
of probes interleaving with each other.
The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<section anchor="for-the-tls-enabled-case"><name>For the TLS-Enabled Case</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a single-sided trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the average of the "foreign responsiveness"
on separate connections and the responsiveness on load-generating connections.</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(tls_f) + TM(http_f)) / 3)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
<section anchor="for-the-tcp-only-case"><name>For the TCP-Only Case</name>

<t>If there are no TLS connections being used, then the notion of a normalised round-trip time for the TLS handshake does not apply.
Zeroes cannot be substituted for <spanx style="verb">tls_f</spanx>, as that will result in an artificially low responsiveness value.
Instead, the same principle of giving each contribution to the foreign RTT equal weight, and then giving the foreign and self RTTs
equal weights is applied.</t>

<t>The TCP-only responsiveness is therefore calculated in the folowing way:</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(http_f)) / 2)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of the final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique
ensures that we quickly reach full capacity.
In parallel of this process we send responsiveness probes.
First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, the responsiveness stability is tracked
until it is shown to be stable at which point the final measurement can be computed.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the immediately preceding MAD intervals is within SDT
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval <spanx style="verb">p</spanx>: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create INP load-generating connections (INP defaults to 1, but can be increased if one has prior knowledge on the capacity of the link).</t>
  <t>Launch a new foreign and self probe (according to the specification set forth
above) every 1/<spanx style="verb">MPS</spanx> seconds until <spanx style="verb">MPS</spanx>*<spanx style="verb">ID</spanx> pairs of probes have been launched
or the end of the interval is reached, whichever comes first.
probes to not exceed the percentage of total capacity (PTC).</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create INC additional load-generating connections (INC defaults to 1, but can be increased for a more aggressive ramp-up phase).</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that implementations may chose to implement a time-limit
on the duration of the test.
If stability is not reached within the time-frame, the implementation can report
the current results with a indication of confidence in the result as described in
the following section.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute MAD iterations of the specific stage. Meaning, the moving average is
not taking the full window into account. This can happen if the time-limit of the
test has been reached before MAD intervals could execute.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least MAD
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate. The confidence score should be reported to the user as part of
the main results.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This is fully intentioinal as the properties of the
client and the server implementations have a direct impact on the perceived responsiveness by the user. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators" and similar
middleboxes.
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of AQM and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

<t>Beyond the server's networking stack influence, the server selection impacts the
result as well. First, the network path chosen between client and server is influenced
by the server selection. Second, the network stack deployed on the selected server
may not be representative for workloads that are relevant to the user running the test.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. To gain this insight, implementations of the responsiveness
test are encouraged to have an optional verbose mode that exposes the inner workings
of the algorithm as well as statistics from the lower layers.
The following is a non-exhaustive list of additional information that can be exposed
in the verbose mode: Idle-latency (measured at the beginning from the initial connections),
achieved capacity on load-generating connections, TM(tcp_f), TM(tls_f), TM(http_f) and TM(http_l)
(and even their raw values), HTTP-protocol (HTTP/1.1, HTTP/2, HTTP/3), transport protocol (TCP, QUIC, ...), congestion-control
algorithm (Cubic, BBR, ...) used on the client-side, ECN or L4S statistics, IP version, ... and many more.</t>

<t>The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

<t>Beyond the difference in the latency of the load-generating connections and the
separate connections, another element can provide additional information: Namely
testing against different servers located in different places along the path will
allow, to some extent, the opportunity to separate the network’s path in different segments. For
example, if the cable modem and a more distant ISP server are hosting
responsiveness measurement endpoints, some localization of the issue can be done.
If the RPM to the cable modem is very high, it means that the network segment
from the client endpoint to the cable modem does not have responsiveness issues,
thus allowing the user to conclude that possible responsiveness issues are
beyond the cable modem.
It must be noted, though, that due to the high level approach to the testing
(including HTTP), a low responsiveness to the cable modem does not necessarily
mean that the network between client and cable modem is the problem (as
outlined in the above previous paragraphs).</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and POST in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a request with a GET or POST method.
The client MUST send the GET with the "Accept-Encoding" header set to "identity" to ensure the
server will not compress the data.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to respond to a GET request with content.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 (OK) and 1 byte of content.
The actual message content is irrelevant.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 (OK) and content size of at least 8GB.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The content can be larger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary content size.
The server should discard the content.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains JSON configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI that contains a valid JSON object
meeting the following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider requires to pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field. The client is then expected to use "test_endpoint" when
resolving the hostname for the URLs</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application
name is "nq" (e.g., https://nq.example.com/.well-known/nq).
The media type of the resource at the well-known URI is "application/json" and
the format of the resource is as specified above. The URI scheme is "https".
No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations that apply to any Active
Measurement of live paths are relevant here. See <xref target="RFC4656"></xref> and <xref target="RFC5357"></xref>.</t>

<t>If server-side resources are a concern, a server can choose to not reply or delay
its response to the initial request for the configuration information through the
.well-known URL.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz and Felix Gaudin for their
enthusiasm around the project and the development
of the Go responsiveness measurement tool and the librespeed implementation.
We also thank Lucas Pardue, Sebastian Moeller, Rich Brown, Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
  <front>
    <title>HTTP Semantics</title>
    <author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'/>
    <author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'/>
    <author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'/>
    <date month='June' year='2022'/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='97'/>
  <seriesInfo name='RFC' value='9110'/>
  <seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="Cake" >
  <front>
    <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
    <author initials="T." surname="Høiland-Jørgensen">
      <organization></organization>
    </author>
    <author initials="D." surname="Taht">
      <organization></organization>
    </author>
    <author initials="J." surname="Morton">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="2018 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)" value=""/>
</reference>


<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
  <front>
    <title>Transmission Control Protocol</title>
    <author fullname='J. Postel' initials='J.' surname='Postel'/>
    <date month='September' year='1981'/>
  </front>
  <seriesInfo name='RFC' value='793'/>
  <seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC4656' target='https://www.rfc-editor.org/info/rfc4656'>
  <front>
    <title>A One-way Active Measurement Protocol (OWAMP)</title>
    <author fullname='S. Shalunov' initials='S.' surname='Shalunov'/>
    <author fullname='B. Teitelbaum' initials='B.' surname='Teitelbaum'/>
    <author fullname='A. Karp' initials='A.' surname='Karp'/>
    <author fullname='J. Boote' initials='J.' surname='Boote'/>
    <author fullname='M. Zekauskas' initials='M.' surname='Zekauskas'/>
    <date month='September' year='2006'/>
    <abstract>
      <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss. High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA). OWAMP enables the interoperability of these measurements. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4656'/>
  <seriesInfo name='DOI' value='10.17487/RFC4656'/>
</reference>

<reference anchor='RFC5357' target='https://www.rfc-editor.org/info/rfc5357'>
  <front>
    <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
    <author fullname='K. Hedayat' initials='K.' surname='Hedayat'/>
    <author fullname='R. Krzanowski' initials='R.' surname='Krzanowski'/>
    <author fullname='A. Morton' initials='A.' surname='Morton'/>
    <author fullname='K. Yum' initials='K.' surname='Yum'/>
    <author fullname='J. Babiarz' initials='J.' surname='Babiarz'/>
    <date month='October' year='2008'/>
    <abstract>
      <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices. OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements. However, it does not accommodate round-trip or two-way measurements. This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities. The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5357'/>
  <seriesInfo name='DOI' value='10.17487/RFC5357'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAB7S3GUAA9V963IjR3bm/3qKXMw6RNoA1OybJG4obKq7JXHUF6pJWbFr
T6gLQBKo6UJVqbKKbI5GE/sa+yb+7zfZJ9nznXPyUgWA6lk7vF7NRSBQlZeT
537L2WyWdUVX2lPz1rqmrlxxYyvrnOmrlW3Nj3X7vqjW5lldrYquoN+zfLFo
7c3HP7+ql1W+pQlWbX7dzQrbXc+KptnO2sEAswePslXe2dNsSf+/rtu7U+O6
VZa5frEtnKOxru4aGub8xdXX2bJe0TSnpqfBPs+Kpj01Xdu77uGDB188eJjl
rc1PzVWbVzRF22W3tKx1W/cNvX5hLmx7XbfbvFpa88rmrm/t1lZd9t7e0YMr
eqbqbFvZbvYcS6YldHm1+ikv64rmv7Mua4pT809dvZwaR8O39trRp7stPvwh
y/K+29TtaWbMjP5nTFG5U/Nsbi7y3C03/JVA5NmmLVxXN5v0p7qlfZ01TWlp
Hcs5f+doDtudmjeV1Z8u8va9+TG/45+XRUfQetY3tu2Kqp6aZ3lZ0BarIjdf
PHlw8lieqvuqA1h/qIrOrsxlR4B2pr42Z1vbFsucn7LbvChPzbLhFf1Djtnm
y3qbDbfzdk6gu7Ntspu3BKS8LJPv/3NspW23B7dxOadDsG5TtDbZyWXX5203
/OU/x16WuqSDG/pxbr7Nb4kGXbKfHws6lvRr3gzNd2NbR4vEZM+KallUVd4V
6Xwbful28w/9El/M++Xcrvosq0A/Hb0PLH/79bMvTk4enGZZUV2nP3zVX1/b
dlHWeXfKo0bKoH9msuLfz803tuvu3ODb7+bmdbHc1KV8rTxqko5ongPY8o2j
t0y3sYF0J3JABEDrsCo6h3q77SuCJ7MlbBnPnz17NTX/WJf91ponT6bmdb9d
EB87MUcPH5w8PKZRnuXv7eHVXxG8//VfipJwf/b7f/2Xdm0rZ6vBI8/n5irf
dONNvyLOUVeD3V0UllgSDuPsuxeEbVhz09qNZS5pvu9tTxwrr/I1MyxzSevG
bgxB3Xxb0xa+Idy5ze/c7vZpO58T73zxQkHEYMhLc3m3bWpX9FtD47ysl/QV
7YWIuGvrpi4LYn3mjNipeW07sFFnjl6evX519vpYTv7BZ188UiQ4efDosX58
/PTJU/345NGTz/zHzz5/oh+fPnoUPn729GH86Af7/OmJf+Dzz576wT5/+MUD
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
oxgMjqP+P6UccmUlvAAA

-->

</rfc>

